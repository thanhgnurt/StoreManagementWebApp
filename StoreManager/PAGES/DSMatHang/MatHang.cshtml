@page "/mathang/{handler?}/{id?}";
@using StoreManager.Pages._Common;
@model StoreManager.Pages.DSMatHang.MatHangModel;

<div style="margin: auto;" class="border border-light p-3 w-50 shadow">
    @switch (Model.Job)
    {
        case Enumuration.Action.Detail:
            template(readOnly: true, errorMessage: "Không tìm thấy cuốn sách bạn yêu cầu.");
            <a class="btn btn-info btn-block mb-2" href="/">Return</a>
            break;
        case Enumuration.Action.Delete:
            template(readOnly: true, errorMessage: "Không tìm thấy cuốn sách bạn yêu cầu.");
            if (Model.Goods != null)
            {
                <p class="text-danger text-center">Bạn thực sự muốn xóa cuốn sách này?</p>
                <a class="btn btn-danger btn-block mb-2" href="/book/@Model.Goods.MaMH?handler=deleteConfirm">Delete</a>
            }
            <a class="btn btn-info btn-block mb-2" href="/">Return</a>
            break;
        case Enumuration.Action.Create:
            await form("create");
            break;
        case Enumuration.Action.Update:
            await form("update");
            break;
    }
</div>

@{
    void template(bool readOnly = true, string errorMessage = "")
    {
        if (Model.Goods == null)
        {
            <p class="h5 text-center text-danger mb-4">@errorMessage</p>
            return;
        }
        <input name="id" type="hidden" value="@Model.Goods.MaMH" />
        <p class="h4 text-center mb-4">@Model.Goods.TenMH</p>
        <label for="TenMH" class="">Tên mặt hàng</label>
        <input name="TenMH" type="text" class="form-control mb-2" value="@Model.Goods.TenMH" @(readOnly ? "readonly" : "") />
        <label for="HanSD" class="">Hạn sử dụng</label>
        <input name="HanSD" type="@(readOnly ? "text" : "date")" class="form-control mb-2" value="@HandleDate.ToStringDate(Model.Goods.HanSD)" @(readOnly ? "readonly" : "") />
        <label for="CtySX" class="">Công ty sản xuất</label>
        <input name="CtySX" type="text" class="form-control mb-2" value="@Model.Goods.CtySX" @(readOnly ? "readonly" : "") />
        <label for="NgaySX" class="">Ngày sản xuất</label>
        <input name="NgaySX" type="@(readOnly ? "text" : "date")" class="form-control mb-2" value="@HandleDate.ToStringDate(Model.Goods.NgaySX)" @(readOnly ? "readonly" : "") />
        if (readOnly)
        {
            <label for="LoaiHang" class="">Loại hàng</label>
            <input name="LoaiHang" type="text" class="form-control mb-2" value="@Model.Goods.LoaiHang" @(readOnly ? "readonly" : "") />

        }

    }}

@{
    async Task form(string handler)
    {

        <form method="post" href="?handler=@handler">
            @{template(false); }
            <label for="LoaiHang" class="">Loại hàng</label>
            <select class="form-control mb-2" name="LoaiHang" aria-label="example">
                <option selected name="LoaiHang">Open this select menu</option>
                @RenderOptionTypeGoods()


            </select>
            <div class="d-flex flex-row-reverse mt-3">
                <button type="submit" class="btn btn-primary ml-2 mb-2">Save</button>
                <button type="reset" class="btn btn-secondary ml-2 mb-2">Reset</button>
                <a class="btn btn-info ml-2  mb-2" href="/">Return</a>
            </div>
        </form>

    }
}


@{

    async Task RenderOptionTypeGoods()
    {
        foreach (var typeGoods in Model.ListTypeGoods)
        {
            <option value=@typeGoods.TenLH name=@typeGoods.TenLH>@typeGoods.TenLH</option>
        }
    }
}
